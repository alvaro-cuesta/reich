$card-width = 5em
$card-height = $card-width * 1.61803398875
$move-deck-duration = 400ms
$pause-deck-duration = 600ms
$draw-duration = 1s
$open-duration = 500ms
$open-wait = 250ms
$end-duration = 1s
$card-draw-height = 60px
$card-margin = 1em
$deck-shown = $card-width * 2/5
$deck-move = $card-width * 1/5

* { box-sizing: border-box }

body {
  text-rendering: optimizeLegibility
}

.deck, .discard {
  width: $card-width
  height: $card-height
  z-index: -10
}

.board {
  display: flex
  flex-direction: row
  transform: translateX($card-width * -1 - $card-margin + $deck-shown)
}

.card-container, .card-placeholder-hack {
  perspective: 500px
  width: $card-width * 3
  margin: 0 $card-margin
}

.card {
  display: flex
  flex-direction: row

  width: 100%

  transform-style: preserve-3d
}

.card-lone {
  width: $card-width
  height: $card-height
  transform: rotateY(180deg)
  transform-style: preserve-3d
}

.card-left, .card-center, .card-right {
  width: $card-width
  height: $card-height

  position: relative
  top: 0
}

.card-face {
  width: 100%
  height: 100%

  backface-visibility: hidden

  position: absolute
  top: 0
  left: 0
}

.card-left, .card-center, .card-right, .card-face {
  transform-style: preserve-3d
}

.card-left {
  transform-origin: 100% 50% 0
}

.card-right {
  transform-origin: 0% 50% 0
}

.card-action {
  display: flex
  flex-direction: column
}

.card-action-row {
  height: 33%
}

.card-active-action {
  cursor: pointer
}

.card-outside-left, .card-outside-center, .card-outside-right {
  transform: rotateY(180deg) translateZ(1px)
}

// Card states

// Draw

.board.state-moving .deck {
  transform: translateX(0px)
  animation: move-deck $move-deck-duration ease-out 0s 1 normal forwards running
}

.board.state-drawing .deck {
  transform: translateX($deck-move)
  animation: unmove-deck $move-deck-duration ease-out $pause-deck-duration 1 normal forwards running
}

.board.state-drawing .card {
  animation: draw $draw-duration ease-out 0s 1 normal forwards running

  transform: translate3d(-1000px, 0, 0)

  .card-left {
    transform: rotateY(180deg)
    z-index: 100
  }

  .card-outside-left {
    cursor: pointer
  }

  .card-right {
    transform: rotateY(-180deg)
  }
}

// Open

.board.state-opening .card {
  .card-left {
    transform: rotateY(180deg)
    animation: unflip-left $open-duration ease-out 0s 1 normal forwards running
  }

  .card-right {
    transform: rotateY(-180deg)
    animation: unflip-right $open-duration ease-out $open-wait 1 normal forwards running
  }
}

 // Closing

.board.state-discarding-left .card,
.board.state-discarding-center .card,
.board.state-removing-left .card,
.board.state-removing-center .card {
  .card-left {
    transform: rotateY(0deg)
    animation: flip-right $open-duration ease-out 0s 1 normal forwards running
    z-index: 50
  }

  .card-right {
    transform: rotateY(0deg)
    animation: flip-left $open-duration ease-out $open-wait 1 normal forwards running
    z-index: 100
  }
}

.board.state-discarding-right .card,
.board.state-removing-right .card {
  .card-left {
    transform: rotateY(0deg)
    animation: flip-right $open-duration ease-out $open-wait 1 normal forwards running
    z-index: 100
  }

  .card-right {
    transform: rotateY(0deg)
    animation: flip-left $open-duration ease-out 0ms 1 normal forwards running
    z-index: 50
  }
}

// End states

.board.state-discarding-left .card,
.board.state-discarding-center .card,
.board.state-discarding-right .card {
  animation: discard $end-duration  ease-out ($open-duration + $open-wait) 1 normal forwards running
}

.board.state-removing-left .card-container,
.board.state-removing-center .card-container,
.board.state-removing-right .card-container {
  animation: remove $end-duration ease-out ($open-duration + $open-wait) 1 normal forwards running
}

// Card animations

@keyframes move-deck {
  from {
    transform: translateX(0px)
  }
  to {
    transform: translateX($deck-move)
  }
}

@keyframes unmove-deck {
  from {
    transform: translateX($deck-move)
  }
  to {
    transform: translateX(0px)
  }
}

@keyframes draw {
  0% {
    transform: translate3d($card-width * -2 - $card-margin + $deck-move, 0px, 0px) rotateY(180deg)
  }
  35% {
    transform: translate3d(-10px, 0px, $card-draw-height) rotateY(180deg)
  }
  45% {
    transform: translate3d(-10px, 0px, $card-draw-height) rotateY(180deg)
  }
  80% {
    transform: translate3d(0px, 0px, 0px) rotateY(0deg)
  }
  100% {
    transform: translate3d(0px, 0px, 0px) rotateY(0deg)
  }
}

@keyframes discard {
  0% {
    transform: translate3d(0px, 0px, 0px) rotateY(0deg)
  }
  35% {
    transform: translate3d(10px, 0px, $card-draw-height) rotateY(180deg)
  }
  45% {
    transform: translate3d(10px, 0px, $card-draw-height) rotateY(180deg)
  }
  80% {
    transform: translate3d($card-margin + $card-width * 2, 0px, 0px) rotateY(180deg)
  }
  100% {
    transform: translate3d($card-margin + $card-width * 2, 0px, 0px) rotateY(180deg)
  }
}

@keyframes remove {
  from { opacity: 1 }
  to { opacity: 0 }
}

// Flips

@keyframes unflip-left {
  from { transform: rotateY(180deg) }
  to { transform: rotateY(0deg) }
}

@keyframes flip-left {
  from { transform: rotateY(0deg) }
  to { transform: rotateY(-180deg) }
}

@keyframes flip-right {
  from { transform: rotateY(0deg) }
  to { transform: rotateY(180deg) }
}

@keyframes unflip-right {
  from { transform: rotateY(-180deg) }
  to { transform: rotateY(0deg) }
}
